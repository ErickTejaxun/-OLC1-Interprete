
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package AnalisisHTML;

import java_cup.runtime.*;
import java.util.ArrayList;
import Utilidades.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parserHTML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parserHTML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parserHTML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parserHTML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\004\000\002\002\004\000\002\002\003\000\002\003" +
    "\012\000\002\004\012" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\024\000\004\012\005\001\002\000\004\002\000\001" +
    "\002\000\004\005\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\013\011\001\002\000" +
    "\004\012\013\001\002\000\004\012\023\001\002\000\004" +
    "\006\014\001\002\000\004\013\015\001\002\000\004\017" +
    "\016\001\002\000\004\012\017\001\002\000\004\014\020" +
    "\001\002\000\004\006\021\001\002\000\004\013\022\001" +
    "\002\000\004\012\ufffe\001\002\000\004\014\024\001\002" +
    "\000\004\005\025\001\002\000\004\013\026\001\002\000" +
    "\004\002\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\024\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\011\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parserHTML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parserHTML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parserHTML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public ArrayList<String> listaClaves = new ArrayList<String>();
    public String errores;
    public String titulo="";    

    public void syntax_error(Symbol s)
    {


        //ErrorC(String descripcion, int linea, int columna, String valor, String archivo)
        Singlenton.registrarError(new ErrorC("Error sintactico. El analizador se recupero tras el error",(s.right+1), (s.left+1), s.value.toString(), "----"));  

    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperaci√≥n de errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {

        Singlenton.registrarError(new ErrorC("Error sintactico. El analizador se recupero tras el error",(s.right+1), (s.left+1), s.value.toString(), "----"));             
    }
    


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parserHTML$actions {
  private final parserHTML parser;

  /** Constructor */
  CUP$parserHTML$actions(parserHTML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parserHTML$do_action_part00000000(
    int                        CUP$parserHTML$act_num,
    java_cup.runtime.lr_parser CUP$parserHTML$parser,
    java.util.Stack            CUP$parserHTML$stack,
    int                        CUP$parserHTML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parserHTML$result;

      /* select the action based on the action number */
      switch (CUP$parserHTML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-1)).value;
		RESULT = start_val;
              CUP$parserHTML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-1)), ((java_cup.runtime.Symbol)CUP$parserHTML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parserHTML$parser.done_parsing();
          return CUP$parserHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= CABECERA 
            {
              Object RESULT =null;
		int titleft = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.peek()).left;
		int titright = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.peek()).right;
		String tit = (String)((java_cup.runtime.Symbol) CUP$parserHTML$stack.peek()).value;
		 titulo = tit;
              CUP$parserHTML$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parserHTML$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserHTML$stack.peek()), RESULT);
            }
          return CUP$parserHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // CABECERA ::= menorque rhead mayorque TITULO menorque diagonal rhead mayorque 
            {
              String RESULT =null;
		int titleft = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-4)).left;
		int titright = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-4)).right;
		String tit = (String)((java_cup.runtime.Symbol) CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-4)).value;
		 RESULT = tit;
              CUP$parserHTML$result = parser.getSymbolFactory().newSymbol("CABECERA",1, ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-7)), ((java_cup.runtime.Symbol)CUP$parserHTML$stack.peek()), RESULT);
            }
          return CUP$parserHTML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // TITULO ::= menorque rtitle mayorque cadena menorque diagonal rtitle mayorque 
            {
              String RESULT =null;
		int titleft = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-4)).left;
		int titright = ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-4)).right;
		String tit = (String)((java_cup.runtime.Symbol) CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-4)).value;
		 RESULT = tit;
              CUP$parserHTML$result = parser.getSymbolFactory().newSymbol("TITULO",2, ((java_cup.runtime.Symbol)CUP$parserHTML$stack.elementAt(CUP$parserHTML$top-7)), ((java_cup.runtime.Symbol)CUP$parserHTML$stack.peek()), RESULT);
            }
          return CUP$parserHTML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parserHTML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parserHTML$do_action(
    int                        CUP$parserHTML$act_num,
    java_cup.runtime.lr_parser CUP$parserHTML$parser,
    java.util.Stack            CUP$parserHTML$stack,
    int                        CUP$parserHTML$top)
    throws java.lang.Exception
    {
              return CUP$parserHTML$do_action_part00000000(
                               CUP$parserHTML$act_num,
                               CUP$parserHTML$parser,
                               CUP$parserHTML$stack,
                               CUP$parserHTML$top);
    }
}

}
